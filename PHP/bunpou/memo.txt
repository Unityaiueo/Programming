<?php

// $name = 'taguchi';
$name = 'dotinstall';$変数名

// echo 'Hello taguchi' . PHP_EOL; PHP_EOLで改行 
// echo 'Hi taguchi' . PHP_EOL;

echo 'Hello ' . $name . PHP_EOL;
// echo 'Hi ' . $name . PHP_EOL;
echo 'Hi ' . $Name . PHP_EOL;


<?php

$name = 'taguchi';

// echo 'It's Sunday. Hello ' . $name . PHP_EOL;
// echo "It's Sunday. Hello " . $name . PHP_EOL;
// echo "It's Sunday. Hello $name" . PHP_EOL;
// echo "It's \"Sunday\". Hello $name" . PHP_EOL;
echo "It's \"Sunday\".\t Hello $name" . PHP_EOL;


<?php

$name = 'taguchi';

// $text = <<<'EOT' // nowdoc <<<'EOT' 改行、 EOT; としてあげると、ここに書いたテキストの改行や字下げは保持したまま、 $text という変数に代入してくれます。
// $text = <<<"EOT" // heredoc
  $text = <<<EOT
  hello! $name
    this is looooong
  text!

  EOT;

echo $text;

【計算】
<?php

// echo 10 + 3 . PHP_EOL; // 13
// echo 10 - 3 . PHP_EOL; // 7
// echo 10 * 3 . PHP_EOL; // 30
// echo 10 / 3 . PHP_EOL; // 3.3333...

// echo 10 % 3 . PHP_EOL; // 1
// echo 10 ** 3 . PHP_EOL; // 1000

// echo 2 + 10 * 3 . PHP_EOL; // 32
// echo (2 + 10) * 3 . PHP_EOL; // 36

echo 2 + '3' . PHP_EOL; // 5　数値と文字列でも計算可能

【定数】
<?php

// $name = 'taguchi';
// $name = 'dotinstall';

// define('NAME', 'taguchi');  NAMEにtaguchiを割り当て
// define('NAME', 'dotinstall');
// echo NAME . PHP_EOL;

const NAME = 'taguchi';
const NAME = 'dotinstall';
echo NAME . PHP_EOL;

【型】
<?php

$a = 'hello';
$b = 10;
$c = -1.3;
$d = null;
$e = true;

// var_dump($a); vardumpで型を調べられる
// var_dump($b);
// var_dump($c);
// var_dump($d);
// var_dump($e);

$x = (float)5;
$y = (string)3.2;

var_dump($x);
var_dump($y);
【if】
<?php

// $score = 85;
// $score = 70;
$score = 40;

if ($score >= 80) {
  echo 'Great!' . PHP_EOL;
} elseif ($score >= 60) {
  echo 'Good!' . PHP_EOL;
} else {
  echo 'OK!' . PHP_EOL;
}

【switch】
<?php

$signal = 'red';
// $signal = 'blue';
// $signal = 'green';
// $signal = 'pink';

switch ($signal) {
  case 'red':
    echo 'Stop!' . PHP_EOL;
    // break;
  case 'yellow':
    echo 'Caution!' . PHP_EOL;
    break;
  case 'blue':
  case 'green':
    echo 'Go!' . PHP_EOL;
    break;
  default:
    echo 'Wrong signal!!' . PHP_EOL;
    break;
}

【for】

<?php

for ($i = 1; $i <= 5; $i++) {
  // echo 'Hello' . PHP_EOL;
  echo "$i - Hello" . PHP_EOL;
}

【while】
<?php

// $hp = 100;
$hp = -50;

// while ($hp > 0) {
//   echo "Your HP: $hp" . PHP_EOL;
//   $hp -= 15;
// }

do {
  echo "Your HP: $hp" . PHP_EOL;
  $hp -= 15;
} while ($hp > 0);

【break continue】
<?php

for ($i = 1; $i <= 10; $i++) {
  // if ($i === 4) {
  // if ($i % 3 === 0) {
  //   continue; ループスキップ
  // }
  if ($i === 4) {
    break;ループ抜ける
  }
  echo $i . PHP_EOL;
}
【関数】
<?php

function showAd()
{
  echo '----------' . PHP_EOL;
  echo '--- Ad ---' . PHP_EOL;
  echo '----------' . PHP_EOL;
}

showAd();
echo 'Tom is great!' . PHP_EOL;
echo 'Bob is great!' . PHP_EOL;
showAd();
echo 'Steve is great!' . PHP_EOL;
echo 'Bob is great!' . PHP_EOL;
showAd();



【引数】

<?php

function showAd($message = 'Ad')  // 仮引数
{
  echo '----------' . PHP_EOL;
  echo '--- ' . $message . ' ---' . PHP_EOL;
  echo '----------' . PHP_EOL;
}

showAd('Header Ad'); // 実引数
echo 'Tom is great!' . PHP_EOL;
echo 'Bob is great!' . PHP_EOL;
// showAd('Ad');
showAd();
echo 'Steve is great!' . PHP_EOL;
echo 'Bob is great!' . PHP_EOL;
showAd('Footer Ad');

【rewturn】
<?php

function sum($a, $b, $c)
{
  // echo $a + $b + $c . PHP_EOL;
  return $a + $b + $c;
  echo 'Here' . PHP_EOL;
}

// sum(100, 200, 300); // 600
// sum(300, 400, 500); // 1200

echo sum(100, 200, 300) + sum(300, 400, 500) . PHP_EOL; // 1800
【無名関数】
<?php

// function sum($a, $b, $c)
// {
//   return $a + $b + $c;
// }

$sum = function ($a, $b, $c) { // 無名関数 関数を代入できる
  return $a + $b + $c;
};

echo $sum(100, 300, 500) . PHP_EOL;

【条件演算子】
<?php

function sum($a, $b, $c)
{
  $total = $a + $b + $c;

  // if ($total < 0) {
  //   return 0;
  // } else {
  //   return $total;
  // }
  return $total < 0 ? 0 : $total;
}

echo sum(100, 300, 500) . PHP_EOL; // 900
echo sum(-1000, 300, 500) . PHP_EOL; // 0
【関数型】

<?php

declare(strict_types=1);　強い型つけ　厳密に型チェック

function showInfo(string $name, int $score): void
{
  echo $name . ': ' . $score . PHP_EOL;
}

// showInfo('taguchi', 40);
// showInfo('taguchi', 'dotinstall');
showInfo('taguchi', '4');

【nullを返す】

<?php

declare(strict_types=1);

function getAward(?int $score): ?string 型の前に？をつけるとその方かnullかになる
{
  return $score >= 100 ? 'Gold Medal' : null;
}

echo getAward(150) . PHP_EOL;
echo getAward(40) . PHP_EOL;
	
【配列】

<?php

$scores = [
  'first'  => 90,配列キー
  'second' => 40,
  'third'  => 100,
];

// var_dump($scores);
// print_r($scores);

echo $scores['third'] . PHP_EOL;
【foreach】

<?php

$scores = [
  'first'  => 90,
  'second' => 40,
  'third'  => 100,
];

// foreach ($scores as $value) {
// foreach ($scores as $score) {
//   echo $score . PHP_EOL;
// }

foreach ($scores as $key => $score) {     右の変数に代入している
  echo $key . ' - ' . $score . PHP_EOL;
}
【配列の要素展開】

<?php

$moreScores = [
  55,
  72,
  'perfect',
  [90, 42, 88],
];

$scores = [
  90,
  40,
  ...$moreScores,  ...で別の配列内に配列を展開できる
  100,
];

// print_r($scores);

echo $scores[5][2] . PHP_EOL;　　　配列の名kなお5番目の中の２番目

【可変長引数】

<?php

// function sum($a, $b, $c)
function sum(...$numbers)こういう引数を可変長引数
{
  // return $a + $b + $c;
  $total = 0;
  foreach ($numbers as $number) {
    $total += $number;
  }
  return $total;
}

echo sum(1, 3, 5) . PHP_EOL;
echo sum(4, 2, 5, 1) . PHP_EOL;

【複数の返り値】

<?php

function getStats(...$numbers)
{
  $total = 0;
  foreach ($numbers as $number) {
    $total += $number;
  }
  return [$total, $total / count($numbers)];
}

// print_r(getStats(1, 3, 5));

// list($sum, $average) = getStats(1, 3, 5);
[$sum, $average] = getStats(1, 3, 5);

echo $sum . PHP_EOL;
echo $average . PHP_EOL;
